{"version":3,"sources":["store/Store.js","components/Nav.js","components/Footer.js","components/Navigation/index.js","components/SetLimit.js","components/Search.js","components/Animation/index.js","components/PokemonCard.js","components/PokemonList.js","components/SetType.js","App.js","serviceWorker.js","index.js"],"names":["Store","_url","_types","_colors","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","pokemonsAll","tempList","firstItem","limit","query","imageUrl","pokemonTypes","pokemonStats","type","check","currentDataByType","filteredByTypes","_this","this","fetch","concat","then","res","json","data","results","runInAction","e","parseInt","length","_this2","matchesFilter","RegExp","filter","_ref","name","test","checked","_this3","filteringByType","_this4","map","item","pokemon","i","j","includes","slice","lastItem","end","decorate","observable","getAllPokemonsList","action","bound","pokemonsForDisplay","computed","onSetLimit","onIncrease","onDecrease","onSearch","getPokemonsTypes","onSetType","appStore","Nav","react_default","a","createElement","className","href","Footer","Navigation","observer","textTrue","start","textFalse","onClick","style","color","SetLimit","htmlFor","id","onChange","target","value","defaultValue","Search","onSubmit","preventDefault","placeholder","Animation","PokemonCard","props","_useState","useState","_useState2","Object","slicedToArray","imageLoading","setImageLoading","localStore","useLocalStore","setRes","types","sprites","stats","reverse","useEffect","imageStyle","display","onImageLoaded","useObserver","src","alt","onLoad","key","backgroundColor","store","stat","PokemonList","components_PokemonCard","colors","SetType","onSetTypes","App","Fragment","components_Navigation","components_SetLimit","components_Search","components_SetType","components_PokemonList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mMAEMA,mDACJC,KAAO,kCACPC,OAAS,CACP,SACA,WACA,SACA,SACA,SACA,OACA,MACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,MACA,SACA,OACA,cAEFC,QAAU,CACRC,OAAQ,QACRC,SAAU,UACVC,OAAQ,YACRC,OAAQ,SACRC,OAAQ,OACRC,KAAM,OACNC,IAAK,QACLC,MAAO,UACPC,MAAO,iBACPC,KAAM,YACNC,MAAO,cACPC,MAAO,YACPC,SAAU,OACVC,QAAS,UACTC,IAAK,UACLC,OAAQ,aACRC,KAAM,SACNC,MAAO,kBAETC,YAAc,UACdC,SAAW,QACXC,UAAY,OACZC,MAAQ,QACRC,MAAQ,QACRC,SAAW,UACXC,aAAe,UACfC,aAAe,UACfC,KAAO,QACPC,OAAQ,OACRC,kBAAoB,UACpBC,gBAAkB,oEAGI,IAAAC,EAAAC,KACpBC,MAAK,GAAAC,OAAIF,KAAKlC,KAAT,wBACFqC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACAA,EAAKC,SACPC,YAAY,WACVT,EAAKX,SAAWW,EAAKZ,YAAcmB,EAAKC,+CAYtCE,GACVT,KAAKV,MAAQoB,SAASD,wCAgBtBT,KAAKX,UACHW,KAAKX,UAAYW,KAAKZ,SAASuB,OAASX,KAAKV,MACzCU,KAAKX,UAAYW,KAAKV,MACtBU,KAAKZ,SAASuB,OAASX,KAAKV,2CAIlCU,KAAKX,UACHW,KAAKX,UAAYW,KAAKV,MAAQU,KAAKX,UAAYW,KAAKV,MAAQ,mCAItDmB,GAAG,IAAAG,EAAAZ,KACXA,KAAKT,MAAQkB,EACb,IAAMI,EAAgB,IAAIC,OAAOd,KAAKT,MAAO,KAC7CS,KAAKZ,SAAWY,KAAKb,YAAY4B,OAC/B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAeL,EAAKrB,OAASsB,EAAcK,KAAKD,uCAIzCR,GACTT,KAAKL,KAAOc,EACZT,KAAKJ,MAAQa,EAAEU,mDAIG,IAAAC,EAAApB,KAClBC,MAAK,GAAAC,OAAIF,KAAKlC,KAAT,SAAAoC,OAAqBF,KAAKL,KAAKsB,KAA/B,MACFd,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJc,EAAKC,gBAAgBf,6CAKVA,GAAM,IAAAgB,EAAAtB,KACrBA,KAAKH,kBAAoBS,EAAI,QAAYiB,IAAI,SAAAC,GAAI,OAAIA,EAAKC,UACtDzB,KAAKL,KAAKwB,UACZnB,KAAKF,gBAAkBE,KAAKF,gBAAgBI,OAAOF,KAAKH,oBAErDG,KAAKL,KAAKwB,UACbnB,KAAKF,gBAAkBE,KAAKF,gBAAgBiB,OAC1C,SAAAW,GAAC,OAAKJ,EAAKzB,kBAAkB0B,IAAI,SAAAI,GAAC,OAAIA,EAAEV,OAAMW,SAASF,EAAET,SAGzDjB,KAAKF,gBAAgBa,OAAS,GAChCX,KAAKZ,SAAWY,KAAKF,gBACrBE,KAAKX,UAAY,IAEjBW,KAAKZ,SAAWY,KAAKb,YACrBa,KAAKX,UAAY,8CAvEnB,OAAOW,KAAKZ,SACRY,KAAKZ,SAASyC,MAAM7B,KAAKX,UAAWW,KAAKX,UAAYW,KAAKV,OAC1D,+BAOJ,OAAOU,KAAKZ,SAAWY,KAAKZ,SAASuB,OAAS,mCAI9C,IAAImB,EAAW9B,KAAKX,UAAYW,KAAKV,MAIrC,OAHIwC,EAAW9B,KAAK+B,MAClBD,EAAW9B,KAAK+B,KAEXD,WA2DXE,YAASnE,EAAO,CACdsB,YAAa8C,IACbC,mBAAoBC,IAAOC,MAC3BhD,SAAU6C,IACVI,mBAAoBC,IACpBjD,UAAW4C,IACX3C,MAAO2C,IACPM,WAAYJ,IACZJ,IAAKO,IACLE,WAAYL,IACZM,WAAYN,IACZL,SAAUQ,IACV/C,MAAO0C,IACPS,SAAUP,IACVxC,KAAMsC,IACNrC,MAAOqC,IACPnC,gBAAiBmC,IACjBU,iBAAkBR,IAAOC,MACzBf,gBAAiBc,IACjBS,UAAWT,IACXtC,kBAAmBoC,MAGrB,IAEeY,EAFE,IAAIhF,QCzKN,SAASiF,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2FACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cACnB,IADH,YCHS,SAASE,IACtB,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6FACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cACnB,IADH,6BCgCSG,EAhCIC,YAAS,WAC1B,IAIMC,EAAW,CACfC,MAAK,GAAAtD,OAAK2C,EAASxD,UAAY,EAA1B,OAAAa,OAAiC2C,EAASf,UAC/CC,IAAG,MAAA7B,OAAQ2C,EAASd,MAEhB0B,EAAqB,eAArBA,EAA0C,cAEhD,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAAoCQ,QAXrC,kBAAMb,EAASJ,eAW9B,QAGAM,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVS,MAAwB,IAAjBd,EAASd,IAAY,CAAE6B,MAAO,OAAU,CAAEA,MAAO,UAEtC,IAAjBf,EAASd,IAAY0B,EAAkBF,EAASC,MACjDT,EAAAC,EAAAC,cAAA,WALF,UAM2B,IAAjBJ,EAASd,IAAT,OACRgB,EAAAC,EAAAC,cAAA,WACkB,IAAjBJ,EAASd,IAAY0B,EAAgBF,EAASxB,KAEjDgB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAAoCQ,QAzBrC,kBAAMb,EAASL,eAyB9B,WCZSqB,EAhBE,WAGf,OACEd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,SAAOa,QAAQ,eAAf,uCACAf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAea,GAAG,cAAcC,SALnC,SAAAvD,GAAC,OAAIoC,EAASN,WAAW9B,EAAEwD,OAAOC,SAM/CnB,EAAAC,EAAAC,cAAA,UAAQiB,MAAM,KAAKC,cAAY,GAA/B,MAGApB,EAAAC,EAAAC,cAAA,UAAQiB,MAAM,MAAd,MACAnB,EAAAC,EAAAC,cAAA,UAAQiB,MAAM,MAAd,SCOOE,EAlBA,WAKb,OACErB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOmB,SALR,SAAA5D,GAAC,OAAIA,EAAE6D,mBAMpBvB,EAAAC,EAAAC,cAAA,SAAOa,QAAQ,UAAf,yCACAf,EAAAC,EAAAC,cAAA,SACEtD,KAAK,OACLoE,GAAG,SACHQ,YAAY,UACZrB,UAAU,eACVc,SAVW,SAAAvD,GAAC,OAAIoC,EAASH,SAASjC,EAAEwD,OAAOC,yBCHpC,SAASM,IACtB,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,OCZR,IA6EeuB,EA7EK,SAAAC,GAAS,IAAAC,EACaC,oBAAS,GADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACNI,EADMJ,EAAA,GAGrBK,EAAaC,YAAc,iBAAO,CACtC1F,aAAc,KACdD,SAAU,KACVE,aAAc,KACd0F,OAJsC,SAI9B9E,GACNN,KAAKP,aAAea,EAAK+E,MACzBrF,KAAKR,SAAWc,EAAKgF,QAAL,cAChBtF,KAAKN,aAAeY,EAAKiF,MAAMC,cAInCC,oBAAU,WAENxF,MAAK,qCAAAC,OAAsCwE,EAAMzD,KAA5C,MACFd,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAI4E,EAAWE,OAAO9E,MAGnC,CAAC4E,EAAYR,EAAMzD,OAEtB,IAAMyE,EAAaV,EAAe,CAAEW,QAAS,QAAW,CAAEA,QAAS,SAE7DC,EAAgB,WACpBX,GAAgB,IAGlB,OAAOY,YAAY,kBACjB9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4EACZwB,EAAMzD,MAER+D,EAAejC,EAAAC,EAAAC,cAACuB,EAAD,MAAgB,KAChCzB,EAAAC,EAAAC,cAAA,OACE6C,IAAKZ,EAAW1F,SAAW0F,EAAW1F,SAAW,qBACjDuG,IAAKrB,EAAMzD,KACX0C,MAAO+B,EACPM,OAAQJ,KAGZ7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZgC,EAAWzF,aACRyF,EAAWzF,aAAa8B,IAAI,SAAA5B,GAAI,OAC9BoD,EAAAC,EAAAC,cAAA,OACEgD,IAAKtG,EAAKA,KAAKsB,KACfiC,UAAU,kEACVS,MAAO,CACLuC,gBAAe,GAAAhG,OAAKwE,EAAMyB,MAAMnI,QAAQ2B,EAAKA,KAAKsB,SAGnDtB,EAAKA,KAAKsB,QAGf,OAGPiE,EAAWxF,aACRwF,EAAWxF,aAAa6B,IAAI,SAAA6E,GAAI,OAC9BrD,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACV+C,IAAKG,EAAKA,KAAKnF,MAEf8B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBkD,EAAKA,KAAKnF,KAA7C,KACA8B,EAAAC,EAAAC,cAAA,YAAOmD,EAAI,cAGf,UClDGC,EArBK/C,YAAS,WAC3B,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZL,EAASR,mBACRQ,EAASR,mBAAmBd,IAAI,SAAAE,GAAO,OACrCsB,EAAAC,EAAAC,cAAA,OAAKgD,IAAKxE,EAAQR,KAAMiC,UAAU,4BAChCH,EAAAC,EAAAC,cAACqD,EAAD,CACErF,KAAMQ,EAAQR,KACdsF,OAAQ1D,EAAS7E,QACjBmI,MAAOtD,OAKbE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,+BC0BKsD,EA3CC,WACd,IAIMC,EAAa,SAAAhG,GACjBoC,EAASD,UAAUnC,EAAEwD,QACrBpB,EAASF,oBAGX,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMoB,SAbW,SAAA5D,GACrBA,EAAE6D,mBAaKzB,EAAS9E,OAAOwD,IAAI,SAAA5B,GAAI,OACvBoD,EAAAC,EAAAC,cAAA,OACEgD,IAAKtG,EACLuD,UAAU,4DACVS,MAAO,CACLuC,gBAAe,GAAAhG,OAAK2C,EAAS7E,QAAQ2B,MAGvCoD,EAAAC,EAAAC,cAAA,SACEtD,KAAK,WACLuD,UAAU,uBACVa,GAAIpE,EACJsB,KAAMtB,EACNqE,SAAUyC,IAEZ1D,EAAAC,EAAAC,cAAA,SACEC,UAAU,uCACVY,QAASnE,GAERA,UCJF+G,EArBH,WAGV,OAFA7D,EAASX,qBAGPa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KACE5D,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,MACA/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFhE,EAAAC,EAAAC,cAAC+D,EAAD,QAGJjE,EAAAC,EAAAC,cAACG,EAAD,QCjBc6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1H,KAAK,SAAA2H,GACjCA,EAAaC","file":"static/js/main.fd2ac1ec.chunk.js","sourcesContent":["import { observable, action, decorate, computed, runInAction } from 'mobx'\r\n\r\nclass Store {\r\n  _url = 'https://pokeapi.co/api/v2/'\r\n  _types = [\r\n    'normal',\r\n    'fighting',\r\n    'flying',\r\n    'poison',\r\n    'ground',\r\n    'rock',\r\n    'bug',\r\n    'ghost',\r\n    'steel',\r\n    'fire',\r\n    'water',\r\n    'grass',\r\n    'electric',\r\n    'psychic',\r\n    'ice',\r\n    'dragon',\r\n    'dark',\r\n    'fairy'\r\n  ]\r\n  _colors = {\r\n    normal: 'black',\r\n    fighting: 'darkRed',\r\n    flying: 'lightBlue',\r\n    poison: 'purple',\r\n    ground: 'peru',\r\n    rock: 'grey',\r\n    bug: 'green',\r\n    ghost: 'thistle',\r\n    steel: 'lightSteelBlue',\r\n    fire: 'orangeRed',\r\n    water: 'deepSkyBlue',\r\n    grass: 'limeGreen',\r\n    electric: 'gold',\r\n    psychic: 'magenta',\r\n    ice: 'skyBlue',\r\n    dragon: 'blueViolet',\r\n    dark: 'maroon',\r\n    fairy: 'lightPink'\r\n  }\r\n  pokemonsAll = null\r\n  tempList = []\r\n  firstItem = 0\r\n  limit = 10\r\n  query = ''\r\n  imageUrl = null\r\n  pokemonTypes = null\r\n  pokemonStats = null\r\n  type = {}\r\n  check = false\r\n  currentDataByType = null\r\n  filteredByTypes = []\r\n\r\n  //Download data for all Pokemons\r\n  getAllPokemonsList () {\r\n    fetch(`${this._url}pokemon/?limit=1000`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.results) {\r\n          runInAction(() => {\r\n            this.tempList = this.pokemonsAll = data.results\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  // Cut arrays to display\r\n  get pokemonsForDisplay () {\r\n    return this.tempList\r\n      ? this.tempList.slice(this.firstItem, this.firstItem + this.limit)\r\n      : []\r\n  }\r\n  onSetLimit (e) {\r\n    this.limit = parseInt(e)\r\n  }\r\n\r\n  get end () {\r\n    return this.tempList ? this.tempList.length : 0\r\n  }\r\n\r\n  get lastItem () {\r\n    let lastItem = this.firstItem + this.limit\r\n    if (lastItem > this.end) {\r\n      lastItem = this.end\r\n    }\r\n    return lastItem\r\n  }\r\n\r\n  onIncrease () {\r\n    this.firstItem =\r\n      this.firstItem < this.tempList.length - this.limit\r\n        ? this.firstItem + this.limit\r\n        : this.tempList.length - this.limit\r\n  }\r\n\r\n  onDecrease () {\r\n    this.firstItem =\r\n      this.firstItem > this.limit ? this.firstItem - this.limit : 0\r\n  }\r\n\r\n  //filter by types\r\n  onSearch (e) {\r\n    this.query = e\r\n    const matchesFilter = new RegExp(this.query, 'i')\r\n    this.tempList = this.pokemonsAll.filter(\r\n      ({ name }) => !this.query || matchesFilter.test(name)\r\n    )\r\n  }\r\n\r\n  onSetType (e) {\r\n    this.type = e\r\n    this.check = e.checked\r\n  }\r\n\r\n  //Download data by type\r\n  getPokemonsTypes () {\r\n    fetch(`${this._url}type/${this.type.name}/`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.filteringByType(data)\r\n      })\r\n  }\r\n\r\n  // Prepare to display filter by type\r\n  filteringByType (data) {\r\n    this.currentDataByType = data['pokemon'].map(item => item.pokemon)\r\n    if (this.type.checked) {\r\n      this.filteredByTypes = this.filteredByTypes.concat(this.currentDataByType)\r\n    }\r\n    if (!this.type.checked) {\r\n      this.filteredByTypes = this.filteredByTypes.filter(\r\n        i => !this.currentDataByType.map(j => j.name).includes(i.name)\r\n      )\r\n    }\r\n    if (this.filteredByTypes.length > 0) {\r\n      this.tempList = this.filteredByTypes\r\n      this.firstItem = 0\r\n    } else {\r\n      this.tempList = this.pokemonsAll\r\n      this.firstItem = 0\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(Store, {\r\n  pokemonsAll: observable,\r\n  getAllPokemonsList: action.bound,\r\n  tempList: observable,\r\n  pokemonsForDisplay: computed,\r\n  firstItem: observable,\r\n  limit: observable,\r\n  onSetLimit: action,\r\n  end: computed,\r\n  onIncrease: action,\r\n  onDecrease: action,\r\n  lastItem: computed,\r\n  query: observable,\r\n  onSearch: action,\r\n  type: observable,\r\n  check: observable,\r\n  filteredByTypes: observable,\r\n  getPokemonsTypes: action.bound,\r\n  filteringByType: action,\r\n  onSetType: action,\r\n  currentDataByType: observable\r\n})\r\n\r\nconst appStore = new Store()\r\n\r\nexport default appStore\r\n","import React from 'react'\r\n\r\nexport default function Nav () {\r\n  return (\r\n    <div className='navbar fixed-top justify-content-md-start justify-content-center bg-danger text-warning'>\r\n      <a href='/' className='text-reset'>\r\n        {' '}\r\n        Pokedex\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer () {\r\n  return (\r\n    <div className=' navbar fixed-bottom justify-content-md-end justify-content-center bg-danger text-warning'>\r\n      <a href='/' className='text-reset'>\r\n        {' '}\r\n        Pokedex\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './navigation.css'\r\nimport { observer } from 'mobx-react-lite'\r\nimport appStore from '../../store/Store'\r\n\r\nconst Navigation = observer(() => {\r\n  const onIncrease = () => appStore.onIncrease()\r\n  const onDecrease = () => appStore.onDecrease()\r\n\r\n  //Different variables for empty search\r\n  const textTrue = {\r\n    start: `${appStore.firstItem + 1} - ${appStore.lastItem}`,\r\n    end: `of ${appStore.end}`\r\n  }\r\n  const textFalse = { start: 'There are no', end: 'for display' }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-around mt-2'>\r\n      <span className='arrow-prev align-self-center ml-5' onClick={onDecrease}>\r\n        Prev\r\n      </span>\r\n      <div\r\n        className='text-center'\r\n        style={appStore.end === 0 ? { color: 'red' } : { color: 'black' }}\r\n      >\r\n        {appStore.end === 0 ? textFalse.start : textTrue.start}\r\n        <br />\r\n        Pokemon{appStore.end === 1 ? `` : `s`}\r\n        <br />\r\n        {appStore.end === 0 ? textFalse.end : textTrue.end}\r\n      </div>\r\n      <span className='arrow-next align-self-center mr-5' onClick={onIncrease}>\r\n        Next\r\n      </span>\r\n    </div>\r\n  )\r\n})\r\nexport default Navigation\r\n","import React from 'react'\r\nimport appStore from '../store/Store'\r\n\r\nconst SetLimit = () => {\r\n  const onSetLimit = e => appStore.onSetLimit(e.target.value)\r\n\r\n  return (\r\n    <form className='mt-3'>\r\n      <label htmlFor='selectLimit'>Select the amount of cards per page</label>\r\n      <select className='form-control' id='selectLimit' onChange={onSetLimit}>\r\n        <option value='10' defaultValue>\r\n          10\r\n        </option>\r\n        <option value='20'>20</option>\r\n        <option value='50'>50</option>\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\nexport default SetLimit\r\n","import React from 'react'\r\nimport appStore from '../store/Store'\r\n\r\nconst Search = () => {\r\n  const onSubmit = e => e.preventDefault()\r\n\r\n  const onSearch = e => appStore.onSearch(e.target.value)\r\n\r\n  return (\r\n    <form className='mt-3' onSubmit={onSubmit}>\r\n      <label htmlFor='search'>Enter the Pokemon name for the search</label>\r\n      <input\r\n        type='text'\r\n        id='search'\r\n        placeholder='Pokemon'\r\n        className='form-control'\r\n        onChange={onSearch}\r\n      />\r\n    </form>\r\n  )\r\n}\r\nexport default Search\r\n","import React from 'react'\r\nimport './animation.css'\r\n\r\nexport default function Animation () {\r\n  return (\r\n    <div className='loading d-flex align-items-center mr-n3'>\r\n      <div className='letter-holder'>\r\n        <div className='l-1 letter'>L</div>\r\n        <div className='l-2 letter'>o</div>\r\n        <div className='l-3 letter'>a</div>\r\n        <div className='l-4 letter'>d</div>\r\n        <div className='l-5 letter'>i</div>\r\n        <div className='l-6 letter'>n</div>\r\n        <div className='l-7 letter'>g</div>\r\n        <div className='l-8 letter'>.</div>\r\n        <div className='l-9 letter'>.</div>\r\n        <div className='l-10 letter'>.</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocalStore, useObserver } from 'mobx-react-lite'\r\nimport Animation from './Animation'\r\n\r\nconst PokemonCard = props => {\r\n  const [imageLoading, setImageLoading] = useState(true)\r\n\r\n  const localStore = useLocalStore(() => ({\r\n    pokemonTypes: null,\r\n    imageUrl: null,\r\n    pokemonStats: null,\r\n    setRes (data) {\r\n      this.pokemonTypes = data.types\r\n      this.imageUrl = data.sprites['front_default']\r\n      this.pokemonStats = data.stats.reverse()\r\n    }\r\n  }))\r\n\r\n  useEffect(() => {\r\n    function getPokemonData () {\r\n      fetch(`https://pokeapi.co/api/v2/pokemon/${props.name}/`)\r\n        .then(res => res.json())\r\n        .then(data => localStore.setRes(data))\r\n    }\r\n    getPokemonData()\r\n  }, [localStore, props.name])\r\n\r\n  const imageStyle = imageLoading ? { display: 'none' } : { display: 'block' }\r\n\r\n  const onImageLoaded = () => {\r\n    setImageLoading(false)\r\n  }\r\n\r\n  return useObserver(() => (\r\n    <div className='card mt-2'>\r\n      <div className='card-header d-flex justify-content-between px-2'>\r\n        <div className='align-self-center text-capitalize font-weight-bold font-italic text-left'>\r\n          {props.name}\r\n        </div>\r\n        {imageLoading ? <Animation /> : null}\r\n        <img\r\n          src={localStore.imageUrl ? localStore.imageUrl : './img/no-image.png'}\r\n          alt={props.name}\r\n          style={imageStyle}\r\n          onLoad={onImageLoaded}\r\n        />\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='d-flex justify-content-between'>\r\n          <span>Types:</span>\r\n          <div className='d-inline-flex justify-content-end'>\r\n            {localStore.pokemonTypes\r\n              ? localStore.pokemonTypes.map(type => (\r\n                  <div\r\n                    key={type.type.name}\r\n                    className='border border-white badge badge-pill text-white text-capitalize'\r\n                    style={{\r\n                      backgroundColor: `${props.store._colors[type.type.name]}`\r\n                    }}\r\n                  >\r\n                    {type.type.name}\r\n                  </div>\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n        {localStore.pokemonStats\r\n          ? localStore.pokemonStats.map(stat => (\r\n              <div\r\n                className='d-flex justify-content-between'\r\n                key={stat.stat.name}\r\n              >\r\n                <span className='text-capitalize'>{stat.stat.name}:</span>\r\n                <span>{stat['base_stat']}</span>\r\n              </div>\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\nexport default PokemonCard\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport appStore from '../store/Store'\r\nimport PokemonCard from './PokemonCard'\r\n\r\nconst PokemonList = observer(() => {\r\n  return (\r\n    <div className='col-md-9'>\r\n      <div className='row'>\r\n        {appStore.pokemonsForDisplay ? (\r\n          appStore.pokemonsForDisplay.map(pokemon => (\r\n            <div key={pokemon.name} className='col-12 col-md-6 col-lg-4'>\r\n              <PokemonCard\r\n                name={pokemon.name}\r\n                colors={appStore._colors}\r\n                store={appStore}\r\n              />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h3 className='mx-auto mt-5 my-md-auto'>The list is loading ...</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\nexport default PokemonList\r\n","import React from 'react'\r\nimport appStore from '../store/Store'\r\n\r\nconst SetType = () => {\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const onSetTypes = e => {\r\n    appStore.onSetType(e.target)\r\n    appStore.getPokemonsTypes()\r\n  }\r\n\r\n  return (\r\n    <div className='card mt-3'>\r\n      <div className='card-header'>Filter by types</div>\r\n      <div className='card-body'>\r\n        <form onSubmit={onHandleSubmit}>\r\n          {appStore._types.map(type => (\r\n            <div\r\n              key={type}\r\n              className='custom-control custom-checkbox badge-pill mb-1 text-white'\r\n              style={{\r\n                backgroundColor: `${appStore._colors[type]}`\r\n              }}\r\n            >\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id={type}\r\n                name={type}\r\n                onChange={onSetTypes}\r\n              />\r\n              <label\r\n                className='custom-control-label text-capitalize'\r\n                htmlFor={type}\r\n              >\r\n                {type}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SetType\r\n","import React from 'react'\r\nimport appStore from './store/Store'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport Nav from './components/Nav'\r\nimport Footer from './components/Footer'\r\nimport Navigation from './components//Navigation'\r\nimport SetLimit from './components//SetLimit'\r\nimport Search from './components//Search'\r\nimport PokemonList from './components//PokemonList'\r\nimport SetType from './components//SetType'\r\n\r\nconst App = () => {\r\n  appStore.getAllPokemonsList()\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className='my-5'>\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <Navigation />\r\n            <SetLimit />\r\n            <Search />\r\n            <SetType />\r\n          </div>\r\n          <PokemonList />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
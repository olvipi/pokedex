{"version":3,"sources":["store/Store.js","components/Nav.js","components/Footer.js","components/Navigation/index.js","components/SetLimit.js","components/Search.js","components/Animation/index.js","components/PokemonCard.js","components/PokemonList.js","components/SetType.js","App.js","serviceWorker.js","index.js"],"names":["Store","_url","_types","_colors","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","pokemonsAll","tempList","firstItem","limit","query","imageUrl","pokemonTypes","pokemonStats","type","check","currentDataByType","filteredByTypes","_this","this","fetch","concat","then","res","json","data","results","runInAction","e","parseInt","length","_this2","matchesFilter","RegExp","filter","_ref","name","test","checked","_this3","filteringByType","_this4","map","item","pokemon","i","j","includes","slice","lastItem","end","decorate","observable","getAllPokemonsList","action","bound","pokemonsForDisplay","computed","onSetLimit","onIncrease","onDecrease","onSearch","getPokemonsTypes","onSetType","appStore","Nav","react_default","a","createElement","className","href","Footer","Navigation","observer","noSelection","preventDefault","textTrue","start","textFalse","onClick","onMouseDown","style","color","SetLimit","htmlFor","id","onChange","target","value","defaultValue","Search","onSubmit","placeholder","Animation","PokemonCard","props","configure","enforceActions","_useState","useState","_useState2","Object","slicedToArray","imageLoading","setImageLoading","localStore","useLocalStore","getPokemonData","types","sprites","stats","reverse","imageStyle","display","onImageLoaded","useObserver","onLoad","src","alt","key","backgroundColor","store","stat","PokemonList","components_PokemonCard","colors","SetType","onSetTypes","App","Fragment","components_Navigation","components_SetLimit","components_Search","components_SetType","components_PokemonList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cd91e89.chunk.js","sourcesContent":["import { observable, action, decorate, computed, runInAction } from 'mobx'\n\nclass Store {\n  _url = 'https://pokeapi.co/api/v2/'\n  _types = [\n    'normal',\n    'fighting',\n    'flying',\n    'poison',\n    'ground',\n    'rock',\n    'bug',\n    'ghost',\n    'steel',\n    'fire',\n    'water',\n    'grass',\n    'electric',\n    'psychic',\n    'ice',\n    'dragon',\n    'dark',\n    'fairy'\n  ]\n  _colors = {\n    normal: 'black',\n    fighting: 'darkRed',\n    flying: 'lightBlue',\n    poison: 'purple',\n    ground: 'peru',\n    rock: 'grey',\n    bug: 'green',\n    ghost: 'thistle',\n    steel: 'lightSteelBlue',\n    fire: 'orangeRed',\n    water: 'deepSkyBlue',\n    grass: 'limeGreen',\n    electric: 'gold',\n    psychic: 'magenta',\n    ice: 'skyBlue',\n    dragon: 'blueViolet',\n    dark: 'maroon',\n    fairy: 'lightPink'\n  }\n  pokemonsAll = null\n  tempList = []\n  firstItem = 0\n  limit = 10\n  query = ''\n  imageUrl = null\n  pokemonTypes = null\n  pokemonStats = null\n  type = {}\n  check = false\n  currentDataByType = null\n  filteredByTypes = []\n\n  //Download data for all Pokemons\n  getAllPokemonsList () {\n    fetch(`${this._url}pokemon/?limit=1000`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.results) {\n          runInAction(() => {\n            this.tempList = this.pokemonsAll = data.results\n          })\n        }\n      })\n  }\n\n  // Cut arrays to display\n  get pokemonsForDisplay () {\n    return this.tempList\n      ? this.tempList.slice(this.firstItem, this.firstItem + this.limit)\n      : []\n  }\n  onSetLimit (e) {\n    this.limit = parseInt(e)\n  }\n\n  get end () {\n    return this.tempList ? this.tempList.length : 0\n  }\n\n  get lastItem () {\n    let lastItem = this.firstItem + this.limit\n    if (lastItem > this.end) {\n      lastItem = this.end\n    }\n    return lastItem\n  }\n\n  onIncrease () {\n    this.firstItem =\n      this.firstItem < this.tempList.length - this.limit\n        ? this.firstItem + this.limit\n        : this.tempList.length - this.limit\n  }\n\n  onDecrease () {\n    this.firstItem =\n      this.firstItem > this.limit ? this.firstItem - this.limit : 0\n  }\n\n  //filter by types\n  onSearch (e) {\n    this.query = e\n    const matchesFilter = new RegExp(this.query, 'i')\n    this.tempList = this.pokemonsAll.filter(\n      ({ name }) => !this.query || matchesFilter.test(name)\n    )\n  }\n\n  onSetType (e) {\n    this.type = e\n    this.check = e.checked\n  }\n\n  //Download data by type\n  getPokemonsTypes () {\n    fetch(`${this._url}type/${this.type.name}/`)\n      .then(res => res.json())\n      .then(data => {\n        this.filteringByType(data)\n      })\n  }\n\n  // Prepare to display filter by type\n  filteringByType (data) {\n    this.currentDataByType = data['pokemon'].map(item => item.pokemon)\n    if (this.type.checked) {\n      this.filteredByTypes = this.filteredByTypes.concat(this.currentDataByType)\n    }\n    if (!this.type.checked) {\n      this.filteredByTypes = this.filteredByTypes.filter(\n        i => !this.currentDataByType.map(j => j.name).includes(i.name)\n      )\n    }\n    if (this.filteredByTypes.length > 0) {\n      this.tempList = this.filteredByTypes\n      this.firstItem = 0\n    } else {\n      this.tempList = this.pokemonsAll\n      this.firstItem = 0\n    }\n  }\n}\n\ndecorate(Store, {\n  pokemonsAll: observable,\n  getAllPokemonsList: action.bound,\n  tempList: observable,\n  pokemonsForDisplay: computed,\n  firstItem: observable,\n  limit: observable,\n  onSetLimit: action,\n  end: computed,\n  onIncrease: action,\n  onDecrease: action,\n  lastItem: computed,\n  query: observable,\n  onSearch: action,\n  type: observable,\n  check: observable,\n  filteredByTypes: observable,\n  getPokemonsTypes: action.bound,\n  filteringByType: action,\n  onSetType: action,\n  currentDataByType: observable\n})\n\nconst appStore = new Store()\n\nexport default appStore\n","import React from 'react'\n\nexport default function Nav () {\n  return (\n    <div className='navbar fixed-top justify-content-md-start justify-content-center bg-danger text-warning'>\n      <a href='/pokedex/' className='text-reset'>\n        Pokedex\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Footer () {\n  return (\n    <div className=' navbar fixed-bottom justify-content-md-end justify-content-center bg-danger text-warning'>\n      <a href='/pokedex/' className='text-reset'>\n        Pokedex\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\nimport './navigation.css'\nimport { observer } from 'mobx-react-lite'\nimport appStore from '../../store/Store'\n\nconst Navigation = observer(() => {\n  const onIncrease = () => appStore.onIncrease()\n  const onDecrease = () => appStore.onDecrease()\n  const noSelection = e => e.preventDefault()\n\n  // Different variables for empty search\n  const textTrue = {\n    start: `${appStore.firstItem + 1} - ${appStore.lastItem}`,\n    end: `of ${appStore.end}`\n  }\n  const textFalse = { start: 'There are no', end: 'for display' }\n\n  return (\n    <div className='d-flex justify-content-around mt-2'>\n      <span\n        className='arrow-prev align-self-center ml-5'\n        onClick={onDecrease}\n        onMouseDown={noSelection}\n      >\n        Prev\n      </span>\n      <div\n        className='text-center'\n        style={appStore.end === 0 ? { color: 'red' } : { color: 'black' }}\n      >\n        {appStore.end === 0 ? textFalse.start : textTrue.start}\n        <br />\n        Pokemon{appStore.end === 1 ? `` : `s`}\n        <br />\n        {appStore.end === 0 ? textFalse.end : textTrue.end}\n      </div>\n      <span\n        className='arrow-next align-self-center mr-5'\n        onClick={onIncrease}\n        onMouseDown={noSelection}\n      >\n        Next\n      </span>\n    </div>\n  )\n})\nexport default Navigation\n","import React from 'react'\nimport appStore from '../store/Store'\n\nconst SetLimit = () => {\n  const onSetLimit = e => appStore.onSetLimit(e.target.value)\n\n  return (\n    <form className='mt-3'>\n      <label htmlFor='selectLimit'>Select the amount of cards per page</label>\n      <select className='form-control' id='selectLimit' onChange={onSetLimit}>\n        <option value='10' defaultValue>\n          10\n        </option>\n        <option value='20'>20</option>\n        <option value='50'>50</option>\n      </select>\n    </form>\n  )\n}\nexport default SetLimit\n","import React from 'react'\nimport appStore from '../store/Store'\n\nconst Search = () => {\n  const onSubmit = e => e.preventDefault()\n\n  const onSearch = e => appStore.onSearch(e.target.value)\n\n  return (\n    <form className='mt-3' onSubmit={onSubmit}>\n      <label htmlFor='search'>Enter the Pokemon name for the search</label>\n      <input\n        type='text'\n        id='search'\n        placeholder='Pokemon'\n        className='form-control'\n        onChange={onSearch}\n      />\n    </form>\n  )\n}\nexport default Search\n","import React from 'react'\nimport './animation.css'\n\nexport default function Animation () {\n  return (\n    <div className='loading d-flex align-items-center mr-n3'>\n      <div className='letter-holder'>\n        <div className='l-1 letter'>L</div>\n        <div className='l-2 letter'>o</div>\n        <div className='l-3 letter'>a</div>\n        <div className='l-4 letter'>d</div>\n        <div className='l-5 letter'>i</div>\n        <div className='l-6 letter'>n</div>\n        <div className='l-7 letter'>g</div>\n        <div className='l-8 letter'>.</div>\n        <div className='l-9 letter'>.</div>\n        <div className='l-10 letter'>.</div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useLocalStore, useObserver } from 'mobx-react-lite'\nimport { configure, runInAction } from 'mobx'\nimport Animation from './Animation'\n\nconst PokemonCard = props => {\n  configure({ enforceActions: 'observed' })\n\n  const [imageLoading, setImageLoading] = useState(true)\n\n  const localStore = useLocalStore(() => ({\n    pokemonTypes: null,\n    imageUrl: null,\n    pokemonStats: null,\n    getPokemonData () {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${props.name}/`)\n        .then(res => res.json())\n        .then(data => {\n          runInAction(() => {\n            this.pokemonTypes = data.types\n            this.imageUrl = data.sprites['front_default']\n            this.pokemonStats = data.stats.reverse()\n          })\n        })\n    }\n  }))\n\n  const getPokemonData = localStore.getPokemonData\n\n  const imageStyle = imageLoading ? { display: 'none' } : { display: 'block' }\n\n  const onImageLoaded = () => {\n    setImageLoading(false)\n  }\n  return useObserver(() => (\n    <div className='card mt-2' onLoad={getPokemonData}>\n      <div className='card-header d-flex justify-content-between px-2'>\n        <div className='align-self-center text-capitalize font-weight-bold font-italic text-left'>\n          {props.name}\n        </div>\n        {imageLoading ? <Animation /> : null}\n        <img\n          src={localStore.imageUrl ? localStore.imageUrl : './img/no-image.png'}\n          alt={props.name}\n          style={imageStyle}\n          onLoad={onImageLoaded}\n        />\n      </div>\n      <div className='card-body'>\n        <div className='d-flex justify-content-between'>\n          <span>Types:</span>\n          <div className='d-inline-flex justify-content-end'>\n            {localStore.pokemonTypes\n              ? localStore.pokemonTypes.map(type => (\n                  <div\n                    key={type.type.name}\n                    className='border border-white badge badge-pill text-white text-capitalize'\n                    style={{\n                      backgroundColor: `${props.store._colors[type.type.name]}`\n                    }}\n                  >\n                    {type.type.name}\n                  </div>\n                ))\n              : null}\n          </div>\n        </div>\n        {localStore.pokemonStats\n          ? localStore.pokemonStats.map(stat => (\n              <div\n                className='d-flex justify-content-between'\n                key={stat.stat.name}\n              >\n                <span className='text-capitalize'>{stat.stat.name}:</span>\n                <span>{stat['base_stat']}</span>\n              </div>\n            ))\n          : null}\n      </div>\n    </div>\n  ))\n}\nexport default PokemonCard\n","import React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport appStore from '../store/Store'\nimport PokemonCard from './PokemonCard'\n\nconst PokemonList = observer(() => {\n  return (\n    <div className='col-md-9'>\n      <div className='row'>\n        {appStore.pokemonsForDisplay ? (\n          appStore.pokemonsForDisplay.map(pokemon => (\n            <div key={pokemon.name} className='col-12 col-md-6 col-lg-4'>\n              <PokemonCard\n                name={pokemon.name}\n                colors={appStore._colors}\n                store={appStore}\n              />\n            </div>\n          ))\n        ) : (\n          <h3 className='mx-auto mt-5 my-md-auto'>The list is loading ...</h3>\n        )}\n      </div>\n    </div>\n  )\n})\nexport default PokemonList\n","import React from 'react'\nimport appStore from '../store/Store'\n\nconst SetType = () => {\n  const onHandleSubmit = e => {\n    e.preventDefault()\n  }\n\n  const onSetTypes = e => {\n    appStore.onSetType(e.target)\n    appStore.getPokemonsTypes()\n  }\n\n  return (\n    <div className='card mt-3'>\n      <div className='card-header'>Filter by types</div>\n      <div className='card-body'>\n        <form onSubmit={onHandleSubmit}>\n          {appStore._types.map(type => (\n            <div\n              key={type}\n              className='custom-control custom-checkbox badge-pill mb-1 text-white'\n              style={{\n                backgroundColor: `${appStore._colors[type]}`\n              }}\n            >\n              <input\n                type='checkbox'\n                className='custom-control-input'\n                id={type}\n                name={type}\n                onChange={onSetTypes}\n              />\n              <label\n                className='custom-control-label text-capitalize'\n                htmlFor={type}\n              >\n                {type}\n              </label>\n            </div>\n          ))}\n        </form>\n      </div>\n    </div>\n  )\n}\nexport default SetType\n","import React from 'react'\nimport appStore from './store/Store'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Nav from './components/Nav'\nimport Footer from './components/Footer'\nimport Navigation from './components//Navigation'\nimport SetLimit from './components//SetLimit'\nimport Search from './components//Search'\nimport PokemonList from './components//PokemonList'\nimport SetType from './components//SetType'\n\nconst App = () => {\n  appStore.getAllPokemonsList()\n\n  return (\n    <>\n      <Nav />\n      <div className='my-5'>\n        <div className='row'>\n          <div className='col-md-3'>\n            <Navigation />\n            <SetLimit />\n            <Search />\n            <SetType />\n          </div>\n          <PokemonList />\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister()\n"],"sourceRoot":""}